.SILENT:

-include .manala/Makefile

ifneq ($(.DEFAULT_GOAL),help)
.DEFAULT_GOAL := _default
endif

_default:
	@printf '\n'
	@printf '\033[33mWARNING:\033[39m\n'
	@printf ' If you just call \033[3mmake\033[23m and read this, no default goal was defined explicitly.\n'
	@printf ' This might be because the \033[3m.manala\033[23m folder is not included.\n'
	@printf ' Hence, \033[3mmake help\033[23m command is not available.\n\n'

define setup
	$(MANALA_DOCKER_MAKE) install db.install build
endef

###########
# Install #
###########

## Install application
install: install.composer install.npm

install.composer:
	# symfony composer install --ansi --verbose

install.npm:
	# npm install --color=always

install@production: export APP_ENV = prod
install@production:
	# # Composer
	# composer install --ansi --verbose --no-interaction --no-progress --prefer-dist --optimize-autoloader --no-scripts --no-dev
	# # Npm
	# npm install --color=always --no-progress --no-audit --no-fund

install@staging: export APP_ENV = prod
install@staging:
	# # Composer
	# composer install --ansi --verbose --no-interaction --no-progress --prefer-dist --optimize-autoloader --no-scripts
	# # Npm
	# npm install --color=always --no-progress --no-audit --no-fund

############
# Database #
############

## Database - Reset hard the database with schema and fixtures
db:
	$(call manala_confirm, Are you sure to reset the database? You will lose all your data. Fixtures will be loaded again., y)
	make db.reset db.fixtures

## Database - Init (create+schema)
db.install: db.create db.update-force

## Database - Create (db only)
db.create:
	symfony console doctrine:database:create --if-not-exists

# Database - Migrate (run migrations)
db.migrate:
	# If you use Messenger, without auto-setup nor a migration:
	# Messenger:
	# symfony console messenger:setup-transports
	# Doctrine:
	symfony console doctrine:migrations:sync-metadata-storage
	symfony console doctrine:migration:migrate --no-interaction

## Database - Generate a migration from current db schema diff
db.diff:
	symfony console doctrine:migrations:diff

## Database - Update. Use FORCE=1 to force the schema update rather than using migrations
db.update: $(if $(FORCE), db.update-force, db.migrate)

# Database - Force update the database schema
db.update-force: db.create
	# If you use Messenger, without auto-setup nor a migration:
	# Messenger:
	# symfony console messenger:setup-transports
	# Doctrine:
	symfony console doctrine:schema:update --force
	symfony console doctrine:migrations:sync-metadata-storage
	symfony console doctrine:migrations:version --add --all --no-interaction

## Database - Drop
db.drop:
	symfony console doctrine:database:drop --force --if-exists

## Database - Reset
db.reset: db.drop db.install

## Database - Load data fixtures
db.fixtures:
	symfony console doctrine:fixtures:load --no-interaction

#########
# Build #
#########

## Build application
build: build.assets

## Build assets
build.assets:
	# npx encore dev --color --progress

build@production:
	# npx encore production --color

build@staging:
	# npx encore production --color

#########
# Serve #
#########

## Serve project (assets, â€¦)
serve:
	$(MAKE) serve.assets & \
		wait

# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# Pick one of the folowing "watch.assets" targets
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

# ## Runs webpack dev-server with HMR enabled (PORT) using HTTP
# serve.assets:
# ifdef MANALA_DOCKER
# 	npx encore dev-server \
# 		--host 0.0.0.0 \
# 		--client-web-socket-url http://$(call manala_project_host, 88)/ws
# else
# 	npx encore dev-server \
# 		--allowed-hosts all \
# 		$(if $(PORT), --port $(PORT))
# endif

# ## Runs webpack dev-server with HMR enabled (PORT) using HTTPS
# serve.assets:
#	$(call manala_message, Will be available at https://$(call manala_project_host, 43) )
# ifdef MANALA_DOCKER
# 	npx encore dev-server \
# 		--host 0.0.0.0 \
#		--port 8080 \
#		--public https://$(call manala_project_host, 88) \
#		--allowed-hosts .$(call manala_project_host) \
#		--server-type https \
#		--server-options-cert $(MANALA_DIR)/.manala/certificates/ssl.pem \
#		--server-options-key $(MANALA_DIR)/.manala/certificates/ssl.key \
#		--client-web-socket-url https://$(call manala_project_host, 88)/ws
# else
# 	npx encore dev-server \
#		--host $(call manala_project_host) \
# 		$(if $(PORT), --port $(PORT)) \
#		--allowed-hosts .$(call manala_project_host) \
#		--server-type https \
#		--server-options-cert $(MANALA_DIR)/.manala/certificates/ssl.pem \
#		--server-options-key $(MANALA_DIR)/.manala/certificates/ssl.key
# endif

# ## Runs webpack with files watching
# serve.assets:
# 	npx encore dev \
# 		--watch

###########
# Release #
###########

## Bump version
version:
	$(call manala_semver_bump,VERSION,$(VERSION))

###########
# Project #
###########

# ...
