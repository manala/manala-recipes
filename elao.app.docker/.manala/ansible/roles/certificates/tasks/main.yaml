---

# Install packages
- name: Certificates > Install packages
  ansible.builtin.apt:
    name:
      - python3-cryptography
    install_recommends: false
    update_cache: true
    cache_valid_time: 3600

# Install ca certificate
- name: Certificates > Install ca
  ansible.builtin.copy:
    src: "{{ certificates_ca }}"
    dest: /usr/local/share/ca-certificates/
    remote_src: true
  register: __certificates_install_ca_result

# Update ca certificates
- name: Certificates > Update
  ansible.builtin.command: update-ca-certificates
  when: __certificates_install_ca_result is changed

# Ca certificate key passphrase prompt
- name: Certificates > Ca key passphrase
  when: certificates_prompt
  block:
    - name: Certificates > Prompt ca key passphrase
      ansible.builtin.pause:
        prompt: Enter ca key passphrase
        echo: false
      register: __certificates_ca_key_passphrase
    - name: Certificates > Assign ca key passphrase
      ansible.builtin.set_fact:
        certificates_ca_key_passphrase: "{{ __certificates_ca_key_passphrase.user_input }}"

# Generate ssl certificate from ca certificate
- name: Certificates > Ssl certificate from ca certificate
  when: (certificates_ca_key_passphrase)
  block:
    - name: Certificates > Generate ssl private key
      community.crypto.openssl_privatekey:
        path: "{{ certificates_ssl_key }}"
        force: true
        type: RSA
        size: 4096
        mode: "0644"
    - name: Certificates > Generate ssl certificate signing request
      community.crypto.openssl_csr:
        path: "{{ certificates_ssl_csr }}"
        privatekey_path: "{{ certificates_ssl_key }}"
        force: true
        common_name: |-
          {{ certificates_name }}
        subject_alt_name: |-
          DNS:{{ certificates_name }},DNS:*.{{ certificates_name }}
    - name: Certificates > Generate ssl certificate
      community.crypto.x509_certificate:
        path: "{{ certificates_ssl_pem }}"
        csr_path: "{{ certificates_ssl_csr }}"
        force: true
        provider: ownca
        ownca_path: "{{ certificates_ca }}"
        ownca_privatekey_path: "{{ certificates_ca_key }}"
        ownca_privatekey_passphrase: "{{ certificates_ca_key_passphrase }}"
        ownca_not_after: +825d

# Copy ssl certificate
- name: Certificates > Copy ssl certificate
  when:
    - certificates_ssl_key is file
    - certificates_ssl_pem is file
  block:
    - name: Certificates > Copy ssl certificate
      ansible.builtin.copy:
        src: "{{ item[0] }}"
        dest: /etc/ssl/{{ item[1] }}/{{ item[0] | basename }}
      loop:
        - ["{{ certificates_ssl_pem }}", certs]
        - ["{{ certificates_ssl_key }}", private]
      notify:
        - Restart nginx

# Generate self signed ssl certificate
- name: Certificates > Generate self signed ssl certificate
  when: (certificates_ssl_key is not file)
     or (certificates_ssl_pem is not file)
  block:
    - name: Certificates > Generate self signed ssl private key
      community.crypto.openssl_privatekey:
        path: /etc/ssl/private/ssl.key
        type: RSA
        size: 4096
      notify:
        - Restart nginx
    - name: Certificates > Generate self signed ssl certificate signing request
      community.crypto.openssl_csr:
        path: /etc/ssl/certs/ssl.csr
        privatekey_path: /etc/ssl/private/ssl.key
        common_name: |-
          {{ certificates_name }}
        subject_alt_name: |-
          DNS:{{ certificates_name }},DNS:*.{{ certificates_name }}
    - name: Certificates > Generate self signed ssl certificate
      community.crypto.x509_certificate:
        path: /etc/ssl/certs/ssl.pem
        csr_path: /etc/ssl/certs/ssl.csr
        privatekey_path: /etc/ssl/private/ssl.key
        provider: selfsigned
      notify:
        - Restart nginx
