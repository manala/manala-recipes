name: Set up

description: Integration - Set up

inputs:
  dir:
    description: Working directory
    required: false
    default: .
  env:
    description: Env vars as a single string
    required: false
  ssh_key:
    description: Ssh Key
    required: false
  services:
    description: Services
    required: false

runs:
  using: composite
  steps:

    - name: Save inputs.dir to env vars for post actions
      # Why? => https://github.com/actions/runner/issues/2009#issuecomment-1195690228
      shell: bash
      run: |
        echo "INPUT_DIR=${{ inputs.dir }}" >> $GITHUB_ENV

    - name: Create dependencies cache dir
      shell: bash
      working-directory: ${{ env.INPUT_DIR }}
      run: mkdir -p .manala/.cache

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ${{ env.INPUT_DIR }}/.manala/.cache
        key: app-dependencies-${{ hashFiles(format('{0}/**/composer.lock', env.INPUT_DIR), format('{0}/**/package-lock.json', env.INPUT_DIR), format('{0}/**/yarn.lock', env.INPUT_DIR)) }}-${{ github.workflow }}-${{ github.job }}
        restore-keys: |
          app-dependencies-${{ hashFiles(format('{0}/**/composer.lock', env.INPUT_DIR), format('{0}/**/package-lock.json', env.INPUT_DIR), format('{0}/**/yarn.lock', env.INPUT_DIR)) }}-${{ github.workflow }}-
          app-dependencies-${{ hashFiles(format('{0}/**/composer.lock', env.INPUT_DIR), format('{0}/**/package-lock.json', env.INPUT_DIR), format('{0}/**/yarn.lock', env.INPUT_DIR)) }}-
          app-dependencies-

    - name: Ssh key
      if: inputs.ssh_key != ''
      uses: webfactory/ssh-agent@v0.7.0
      with:
          ssh-private-key: ${{ inputs.ssh_key }}

    - name: Set up system
      uses: ./.manala/github/system/setup
      with:
        dir: ${{ env.INPUT_DIR }}
        docker_build_cache_scope: app-docker-${{ hashFiles('.manala/docker/Dockerfile', '.manala/Makefile', '.manala/ansible/**', '.manala/certificates/**') }}
        docker_compose_profile: integration
        docker_env: ${{ inputs.env }}
        docker_services: ${{ inputs.services }}
        docker_project_cache: true
        docker_compose_up: true
