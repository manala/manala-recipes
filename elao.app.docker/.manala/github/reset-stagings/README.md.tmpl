# Reset stagings

{{- if not .Vars.deliveries }}

¯\_(ツ)_/¯ No delivery configured…

{{- else }}

## Usage

{{- /* Guess apps */ -}}
{{- $apps := list -}}
{{- range $delivery := .Vars.deliveries -}}
  {{- if hasKey $delivery "app" -}}
    {{- $apps = (append $apps $delivery.app) | uniq -}}
  {{- end -}}
{{- end -}}

{{- /* Guess main branch */ -}}
{{- $mainBranch := "master" -}}
{{- range $delivery := .Vars.deliveries -}}
  {{- if hasKey $delivery "ref" -}}
    {{- if eq $delivery.tier "production" -}}
      {{- $mainBranch = $delivery.ref -}}
    {{- end -}}
  {{- end -}}
{{- end }}

{{- /* Guess tiers */ -}}
{{- $tiers := list -}}
{{- range $delivery := .Vars.deliveries -}}
  {{- $tiers = (append $tiers $delivery.tier) | uniq -}}
{{- end }}
{{- $tiers = without $tiers "production" -}}

{{- if eq (len $tiers) 0 }}

¯\_(ツ)_/¯ No staging…

{{- else }}

{{- $tierRef := $tiers | first -}}
{{- $singleTier := eq (len $tiers) 1 -}}
{{- if not $singleTier }}
{{- $tierRef = `${{ matrix.tier }}` -}}
{{- end }}

In order to properly detect and notify PRs already merged in a staging branch,
you might want to add the following labels to your GitHub repository:

{{ range $tier := $tiers -}}
* `{{ $tier }}`
* `{{ $tier }}-reset`
{{ end }}
Create the `.github/workflows/reset-stagings.yaml` workflow file:

```yaml
name: Reset stagings
{{- if $singleTier }}
run-name: 'Reset {{ $tierRef }} branch'
{{- else }}
run-name: {{ `${{ format('Reset {0} branche(s)', github.event.inputs.tiers == 'all' && 'all stagings' || github.event.inputs.tiers) }}` }}
{{- end }}

on:
  workflow_dispatch:
    inputs:
      {{- if not $singleTier }}
      tiers:
        description: Tier branches to reset
        type: choice
        options: [all, {{ $tiers | join ", " }}]
        required: true
      {{- end }}
      ref:
        description: Git reference.
        default: {{ $mainBranch }}
        required: true
      comment:
        description: Add a comment to notify opened PRs
        type: boolean
        default: 'true'
        required: false
      deploy:
        description: Re-release and deploy the branches with the new code
        type: boolean
        default: 'false'
        required: false

concurrency:
  {{- if $singleTier }}
  group: {{ `${{ github.workflow }}-${{ github.ref }}` }}
  {{- else }}
  group: {{ `${{ github.workflow }}-${{ github.ref }}-${{ github.event.inputs.tiers }}` }}
  {{- end }}
  cancel-in-progress: true

jobs:
  {{- if not $singleTier }}
  matrix:
    name: 'Compute matrix'
    runs-on: ubuntu-latest
    outputs:
      matrix: {{ `${{ steps.set-matrix.outputs.matrix }}` }}

    steps:
      - name: 'Compute matrix'
        id: set-matrix
        run: |
          matrix='{{ `${{ github.event.inputs.tiers == 'all' && '{ "tier": ^tiers^ }' || format('{{ "tier"{0} ["{1}"] }}', ':', github.event.inputs.tiers) }}` | replace "^tiers^" ($tiers | toJson) }}'
          echo $matrix
          echo $matrix | jq .
          echo "matrix=$matrix" >> $GITHUB_OUTPUT
  {{- end }}

  reset:
    name: 'Reset {{ $tierRef }} branch'
    {{- if not $singleTier }}
    needs: matrix
    strategy:
      fail-fast: false
      # https://github.blog/changelog/2020-04-15-github-actions-new-workflow-features/#new-fromjson-method-in-expressions
      matrix: {{ `${{ fromJson(needs.matrix.outputs.matrix) }}` }}
    {{- end }}
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: {{ `${{ secrets.GITHUB_TOKEN }}` }}

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4

      - name: {{ `'Reset hard $tierRef branch on ${{ github.event.inputs.ref }}'` | replace "$tierRef" $tierRef }}
        uses: nicksnell/action-reset-repo@master
        with:
          github_token: {{ `${{ secrets.GITHUB_TOKEN }}` }}
          base_branch: {{ `${{ github.event.inputs.ref }}` }}
          reset_branch: {{ $tierRef }}

      - name: 'Find PRs with label {{ $tierRef }}'
        id: find-prs
        run: |
          prs=$(gh pr list --label '{{ $tierRef }}' --json=number --state open | jq -cr '.|map(.number)')
          echo $prs
          echo $prs | jq .
          echo "prs=$prs" >> $GITHUB_OUTPUT

      - name: 'Labelize opened PRs with label {{ $tierRef }}'
        run: |
          echo {{ `${{ steps.find-prs.outputs.prs }}` }} | jq -c '.[]' | while read pr; do
            gh pr view $pr --json=number,title || true
            gh pr edit $pr --remove-label {{ $tierRef }} || true
            gh pr edit $pr --add-label {{ $tierRef }}-reset || true
          done

      - name: 'Notify opened PRs with label {{ $tierRef}}'
        if: success() && github.event.inputs.comment == 'true'
        run: |
          echo {{ `${{ steps.find-prs.outputs.prs }}` }} | jq -c '.[]' | while read pr; do
            gh pr view $pr --json=number,title
            {{ `echo -e "> [\!Warning] \n> la branche ^b^$tierRef^b^ a été reset. Cette PR doit à nouveau être mergée sur ^b^$tierRef^b^" | gh pr comment $pr --body-file - `| replace "^b^" "\\`" | replace "$tierRef" $tierRef }}
          done

  deploy:
    name: 'Re-release & deploy {{ $tierRef }} branch'
    if: success() && github.event.inputs.deploy == 'true'
    {{- if not $singleTier }}
    needs: [matrix, reset]
    strategy:
      fail-fast: false
      # https://github.blog/changelog/2020-04-15-github-actions-new-workflow-features/#new-fromjson-method-in-expressions
      matrix: {{ `${{ fromJson(needs.matrix.outputs.matrix) }}` }}
    {{- else }}
    needs: reset
    {{- end }}
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: {{ `${{ secrets.GITHUB_TOKEN }}` }}

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
      {{- range $app := $apps }}

      - name: 'Trigger release workflow for {{ $app }}@{{ $tierRef }}'
        run: |
          gh workflow run release \
              --field deploy=true \
              --field app={{ $app }} \
              --field tier={{ $tierRef }}
      {{- else }}

      - name: 'Trigger release workflow for {{ $tierRef }}'
        run: |
          gh workflow run release \
              --field deploy=true \
              --field tier={{ $tierRef }}
      {{- end }}
```

{{- end }}
{{- end }}
