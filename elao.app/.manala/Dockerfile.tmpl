{{- with .Vars.system -}}

FROM debian:{{ .version }}-slim

LABEL maintainer="Elao <contact@elao.com>"

#########
# Setup #
#########

# The 'container' environment variable tells systemd that it's running inside a
# Docker container environment.
# It's also internally used for checking we're running inside a container too.
ENV \
  container="docker" \
  {{- if eq (.version|int) 8 }}
  ANSIBLE_PYTHON_INTERPRETER="/usr/bin/python"
  {{- else }}
  ANSIBLE_PYTHON_INTERPRETER="/usr/bin/python3"
  {{- end }}

RUN \
    # Disable irrelevants apt-key warnings
    export APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE="1" \
    # Disable all debian user interaction
    && export DEBIAN_FRONTEND="noninteractive" \
    && apt-get update \
    && apt-get install --yes --no-install-recommends \
        bash-completion \
        gnupg dirmngr \
        ca-certificates \
        sudo \
    # Srv
    && mkdir -p /srv \
    && chmod 777 /srv \
    # User
    && adduser --disabled-password --gecos "" docker \
    # Bash
    && sed -i 's/^#force_color_prompt=yes/force_color_prompt=yes/' \
        /home/docker/.bashrc \
    # Sudo
    && echo "docker ALL=(ALL) NOPASSWD:ALL" \
        > /etc/sudoers.d/docker \
    # Ansible
    {{- if eq (.version|int) 8 }}
    && echo "deb http://ppa.launchpad.net/ansible/ansible/ubuntu trusty main" \
    {{- else if eq (.version|int) 9 }}
    && echo "deb http://ppa.launchpad.net/ansible/ansible/ubuntu xenial main" \
    {{- else if eq (.version|int) 10 }}
    && echo "deb http://ppa.launchpad.net/ansible/ansible/ubuntu bionic main" \
    {{- end }}
        > /etc/apt/sources.list.d/ppa_launchpad_net_ansible_ansible_ubuntu.list \
    && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 93C4A3FD7BB9C367 \
    && apt-get update \
    && apt-get install --yes --no-install-recommends \
    {{- if eq (.version|int) 8 }}
        ansible python python-apt
    {{- else }}
        ansible python3 python3-apt
    {{- end }}

COPY docker/bin/entrypoint.sh /usr/local/bin/entrypoint.sh

ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]

##########
# System #
##########

COPY ansible/inventories/system.yaml         /tmp/ansible/inventories/
COPY ansible/roles/system                    /tmp/ansible/roles/system/
COPY ansible/templates                       /tmp/ansible/templates/
COPY ansible/ansible.cfg ansible/system.yaml /tmp/ansible/

RUN \
    cd /tmp/ansible \
    && ansible-galaxy collection install \
      --requirements-file roles/system/requirements.yaml \
      --force \
    && ansible-playbook system.yaml \
      --inventory-file inventories \
      --limit integration \
    && rm -Rf /tmp/ansible

RUN \
    # NodeJs
    mkdir -p /usr/etc \
    && echo "cache=\${XDG_CACHE_HOME}/npm" > /usr/etc/npmrc

WORKDIR /srv/app

USER docker

{{- end }}
