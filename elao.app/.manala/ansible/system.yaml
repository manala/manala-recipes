---

- hosts: system

  collections:
    - manala.roles

  vars:

    ############
    # Accounts #
    ############

    manala_accounts_groups:
      - group: docker
        system: true
        state: "{{ 'present' if (system_docker) else 'absent' }}"

    manala_accounts_users:
      - user: "{{ system_app_user }}"
        group: "{{ system_app_group }}"
        groups: "{{
          ['docker'] if (system_docker) else []
        }}"
        state: "{{ 'present' if (system_app) else 'absent' }}"

    ################
    # Alternatives #
    ################

    manala_alternatives_selections:
      - selection: editor
        path: "{{ manala_vim_bin }}"

    #######
    # Apt #
    #######

    manala_apt:
      update: true

    manala_apt_configs:
      - file: archive
        config: |
          Acquire::Check-Valid-Until "false";
        state: "{{ 'present' if (ansible_distribution_release in ['jessie']) else 'ignore' }}"

    manala_apt_components:
      - main

    manala_apt_sources_list_template: apt/sources.list.j2

    manala_apt_repositories_exclusive: true
    manala_apt_repositories: "{{ system_apt_repositories }}"

    manala_apt_preferences_exclusive: true
    manala_apt_preferences:
      # Jessie
      - preference: git@backports
        state: "{{ 'present' if (system_git and (ansible_distribution_release in ['jessie'])) else 'ignore' }}"
      - preference: python-websocket@manala
        state: "{{ 'present' if (ansible_distribution_release in ['jessie']) else 'ignore' }}"
      - preference: python-ipaddress@manala
        state: "{{ 'present' if (ansible_distribution_release in ['jessie']) else 'ignore' }}"
      - preference: python-backports.ssl-match-hostname@manala
        state: "{{ 'present' if (ansible_distribution_release in ['jessie']) else 'ignore' }}"
      - preference: python-docker@manala
        state: "{{ 'present' if (ansible_distribution_release in ['jessie']) else 'ignore' }}"
      - preference: python-httplib2@manala
        state: "{{ 'present' if (ansible_distribution_release in ['jessie']) else 'ignore' }}"
      - preference: python-jinja2@manala
        state: "{{ 'present' if (ansible_distribution_release in ['jessie']) else 'ignore' }}"
      # Jessie - Python Cryptography
      - preference: python-cryptography@backports
        state: "{{ 'present' if (ansible_distribution_release in ['jessie']) else 'ignore' }}"
      - preference: python-pyasn1@backports
        state: "{{ 'present' if (ansible_distribution_release in ['jessie']) else 'ignore' }}"
      - preference: python-setuptools@backports
        state: "{{ 'present' if (ansible_distribution_release in ['jessie']) else 'ignore' }}"
      - preference: python-pkg-resources@backports
        state: "{{ 'present' if (ansible_distribution_release in ['jessie']) else 'ignore' }}"
      # Ansible
      - ansible@ansible
      # NodeJS
      - preference: "nodejs@{{
          'nodesource_' ~ system_nodejs_version|string|replace('.', '_') if (system_nodejs) else
          'default'
        }}"
        state: "{{ 'present' if (system_nodejs) else 'ignore' }}"
      # Yarn
      - preference: yarn@yarn
        state: "{{ 'present' if (system_nodejs_yarn) else 'ignore' }}"
      # Php
      - preference: php@sury_php
        state: "{{ 'present' if (system_php) else 'ignore' }}"
      # Elasticsearch
      - preference: "elasticsearch@{{
          'elasticsearch_' ~ system_elasticsearch_version|string|replace('.', '_') if (system_elasticsearch) else
          'default'
        }}"
        state: "{{ 'present' if (system_elasticsearch) else 'ignore' }}"
      # Docker
      - preference: docker@docker
        state: "{{ 'present' if (system_docker) else 'ignore' }}"
      # InfluxDB
      - preference: influxdb@influxdata
        state: "{{ 'present' if (system_influxdb) else 'ignore' }}"
      # Nginx
      - preference: nginx@nginx
        state: "{{ 'present' if (system_nginx) else 'ignore' }}"
      # Supervisor
      - preference: "supervisor@{{
          'manala' if (ansible_distribution_release in ['jessie']) else
          'backports' if (ansible_distribution_release in ['stretch']) else
          'default'
        }}"
        state: "{{ 'present' if (system_supervisor and (ansible_distribution_release in ['jessie', 'stretch'])) else 'ignore' }}"
      # MySQL
      - preference: "mysql@{{
          'mysql_' ~ system_mysql_version|string|replace('.', '_') if (system_mysql) else
          'default'
        }}"
        state: "{{ 'present' if (system_mysql) else 'ignore' }}"
      # MariaDB
      - preference: "mariadb@{{
          'mariadb_' ~ system_mariadb_version|string|replace('.', '_') if (system_mariadb) else
          'default'
        }}"
        state: "{{ 'present' if (system_mariadb) else 'ignore' }}"
      # Redis
      - preference: redis@backports
        state: "{{ 'present' if (
          (system_redis_version|string == '5.0') and (ansible_distribution_release in ['stretch'])
          or (system_redis_version|string == '6.0') and (ansible_distribution_release in ['buster'])
        ) else 'ignore' }}"
      - "{{ system_apt_preferences }}"

    manala_apt_holds_exclusive: true
    manala_apt_holds:
      - "{{ system_apt_holds }}"

    manala_apt_packages:
      - "{{ system_apt_packages }}"

    ################
    # Certificates #
    ################

    certificates_name: "{{ system_certificates_name }}"

    ############
    # Composer #
    ############

    manala_composer_version: "{{ system_php_composer_version }}"

    ########
    # Cron #
    ########

    manala_cron_files_defaults:
      user: "{{ system_app_user }}"
    manala_cron_files: "{{ system_cron_files }}"

    ##########
    # Docker #
    ##########

    manala_docker_containers:
      - name: mailhog
        image: mailhog/mailhog:v1.0.1
        state: started
        restart_policy: unless-stopped
        ports:
          - 25:1025
          - 8025:8025
      - name: phpmyadmin
        image: phpmyadmin/phpmyadmin
        state: "{{ 'started' if (system_mysql or system_mariadb) else 'absent' }}"
        restart_policy: unless-stopped
        env:
          PMA_USER: root
          # Default docker host ip
          PMA_HOST: 172.17.0.1
          UPLOAD_LIMIT: 64M
        ports:
          - 1979:80
      - name: phpredisadmin
        image: erikdubbelboer/phpredisadmin
        state: "{{ 'started' if (system_redis) else 'absent' }}"
        restart_policy: unless-stopped
        env:
          # Default docker host ip
          REDIS_1_HOST: 172.17.0.1
        ports:
          - 1981:80
      - "{{ system_docker_containers }}"

    #################
    # Elasticsearch #
    #################

    manala_elasticsearch_version: "{{ system_elasticsearch_version }}"

    manala_elasticsearch_plugins: "{{ system_elasticsearch_plugins }}"

    ###############
    # Environment #
    ###############

    manala_environment_files:
      - zsh

    manala_environment_variables: "{{ {}|combine(
      system_env,
      system_php_composer|ternary(
        {'COMPOSER_MEMORY_LIMIT': -1,},
        {}
      )
    ) }}"

    #########
    # Files #
    #########

    manala_files_attributes_defaults:
      - parents: true
        force: true
      - path: "^{{ system_app_log_dir }}"
        user: "{{ system_app_user }}"
        group: "{{ system_app_group }}"
      - path: "^{{ system_app_cache_dir }}"
        user: "{{ system_app_user }}"
        group: "{{ system_app_group }}"
      - path: "^{{ system_app_sessions_dir }}"
        user: "{{ system_app_user }}"
        group: "{{ system_app_group }}"
    manala_files_attributes:
      - path: "{{ system_app_log_dir }}"
        state: directory
      - path: "{{ system_app_cache_dir }}"
        state: directory
      - path: "{{ system_app_sessions_dir }}"
        state: directory
      - path: /usr/share/nginx/html/404.html
        template: nginx/html/404.html.j2
        mode: "0644"
      - "{{ system_files_attributes }}"

    #######
    # Git #
    #######

    manala_git_config_template: git/gitconfig.j2

    ############
    # Gomplate #
    ############

    manala_gomplate_version: 3.7.0

    ############
    # InfluxDB #
    ############

    manala_influxdb_config_template: config/influxdata/influxdb.conf.j2
    manala_influxdb_config: "{{ system_influxdb_config }}"

    manala_influxdb_databases: "{{ system_influxdb_databases }}"

    manala_influxdb_users: "{{ system_influxdb_users }}"

    manala_influxdb_privileges: "{{ system_influxdb_privileges }}"

    ########
    # Java #
    ########

    manala_java_version: "{{ {
        'jessie': '8',
        'stretch': '8',
        'buster': '11',
      }[ansible_distribution_release]
    }}"

    ###########
    # Locales #
    ###########

    manala_locales_codes_default: "{{ system_locales_default }}"
    manala_locales_codes: "{{ system_locales_codes }}"

    ########
    # Motd #
    ########

    manala_motd_scripts_exclusive: true
    manala_motd_scripts:
      - file: 10-motd
        template: "{{ system_motd_template }}"
        message: "{{ system_motd_message }}"

    ###################
    # MySQL / MariaDB #
    ###################

    manala_mysql_install_packages: "{{
      system_mariadb_install_packages
        if (system_mariadb) else
      system_mysql_install_packages
    }}"

    manala_mysql_configs_dir: "{{
      system_mariadb_configs_dir
        if (system_mariadb) else
      system_mysql_configs_dir
    }}"
    manala_mysql_configs:
      - template: mysql/zz-mysqld.cnf.j2

    manala_mysql_users:
      # Create a password-less/any-host root user...
      - name: root
        password: ~
        host: "%"
        priv: "*.*:ALL,GRANT"
      # ...then remove anonymous localhost user (MySQL 5.6)
      - name: ''
        host: localhost
        state: absent
      # ...then remove root localhost user (socket based authentication on MySQL 5.7+/MariaDB)
      - name: root
        host: localhost
        state: absent

    ###########
    # Network #
    ###########

    manala_network_hosts: "{{ system_network_hosts }}"

    #########
    # Nginx #
    #########

    manala_nginx_config_template: nginx/nginx.conf.j2

    manala_nginx_configs_exclusive: true
    manala_nginx_configs:
      - template: nginx/default.conf.j2
      - template: nginx/ssl_offloading.conf.j2
      - "{{ system_nginx_configs }}"

    #########
    # Ngrok #
    #########

    manala_ngrok_configs_exclusive: true
    manala_ngrok_configs:
        - template: ngrok/ngrok.yml.j2

    #######
    # Npm #
    #######

    manala_npm_packages: "{{ system_nodejs_packages }}"

    #############
    # Oh my zsh #
    #############

    manala_ohmyzsh_custom_themes_exclusive: true
    manala_ohmyzsh_custom_themes:
      - template: ohmyzsh/theme.zsh-theme.j2

    manala_ohmyzsh_users:
      - user: "{{ system_app_user }}"
        group: "{{ system_app_group }}"
        template: ohmyzsh/.zshrc.j2
        state: "{{ 'present' if (system_app) else 'ignore' }}"

    #######
    # Php #
    #######

    manala_php_version: "{{ system_php_version }}"

    manala_php_sapis_exclusive: true
    manala_php_sapis: "{{ system_php_sapis }}"

    manala_php_fpm_pools_exclusive: true
    manala_php_fpm_pools:
      - file: app.conf
        template: fpm_pools/sury/pools.conf.j2
        config:
          app:
            user: "{{ system_app_user }}"
            group: "{{ system_app_group }}"
            listen: /run/php-fpm.app.sock
            pm.max_children: 20
            env: "{{ system_env }}"
            php_admin_value:
              error_log: "{{ system_app_log_dir  }}/php.error.log"

    manala_php_extensions_exclusive: true
    manala_php_extensions:
      - opcache
      - readline
      - extension: json
        state: "{{ 'present' if (manala_php_version and manala_php_version|string is version('8.0', '<')) else 'ignore' }}"
      - extension: xdebug
        enabled: false
      - "{{ system_php_extensions }}"
    manala_php_extensions_pecl_versioned: "{{ (ansible_distribution_release not in ['jessie']) or system_php_dotdeb }}"

    manala_php_configs_exclusive: true
    manala_php_configs:
      - template: php/50-xdebug.ini.j2
      - "{{ system_php_configs }}"

    #########
    # Redis #
    #########

    manala_redis_server_config_template: config/debian/redis.conf.j2
    manala_redis_server_config: "{{ {
      'bind': '0.0.0.0',
    }|combine(system_redis_server_config) }}"

    #######
    # Ssh #
    #######

    manala_ssh_server: "{{ system_ssh_server }}"
    manala_ssh_server_config_template: ssh/sshd_config.j2
    manala_ssh_server_config:
      AcceptEnv: DIR

    manala_ssh_client_config_template: "{{ system_ssh_client_config_template }}"
    manala_ssh_client_config: "{{ system_ssh_client_config }}"

    manala_ssh_known_hosts:
      - github.com
      - git.elao.com

    ##############
    # Supervisor #
    ##############

    manala_supervisor_config_template: config/debian/supervisord.conf.j2

    manala_supervisor_configs_exclusive: true
    manala_supervisor_configs_defaults:
      template: supervisor/app.conf.j2
    manala_supervisor_configs:
      - template: configs/inet_http_server.conf.j2
        config:
          port: "*:9001"
      - "{{ system_supervisor_configs }}"

    ############
    # Timezone #
    ############

    manala_timezone_default: "{{ system_timezone_default }}"

    #######
    # Vim #
    #######

    manala_vim_config_template: vim/vimrc.local.j2

  tasks:

    - import_role:
        name: zsh
      when: system_zsh
      tags: [zsh]

    - import_role:
        name: environment
      when: system_environment
      tags: [environment, env]

    - import_role:
        name: apt
      when: system_apt
      tags: [apt]

    - import_role:
        name: network
      when: system_network
      tags: [network]

    - import_role:
        name: accounts
      when: system_accounts
      tags: [accounts]

    - import_role:
        name: locales
      when: system_locales
      tags: [locales]

    - import_role:
        name: ssh
      when: system_ssh
      tags: [ssh]

    - import_role:
        name: motd
      when: system_motd
      tags: [motd]

    - import_role:
        name: timezone
      when: system_timezone
      tags: [timezone]

    - import_role:
        name: vim
      when: system_vim
      tags: [vim]

    - import_role:
        name: git
      when: system_git
      tags: [git]

    - import_role:
        name: ohmyzsh
      when: system_ohmyzsh
      tags: [ohmyzsh]

    - import_role:
        name: alternatives
      when: system_alternatives
      tags: [alternatives]

    - import_role:
        name: files
      when: system_files
      tags: [files]

    - import_role:
        name: nodejs
      when: system_nodejs
      tags: [nodejs, node]

    - import_role:
        name: npm
      when: system_nodejs_npm
      tags: [npm, nodejs, node]

    - import_role:
        name: yarn
      when: system_nodejs_yarn
      tags: [yarn, nodejs, node]

    - import_role:
        name: php
      when: system_php
      tags: [php]

    - import_role:
        name: composer
      when: system_php_composer
      tags: [composer]

    - import_role:
        name: symfony_cli
      when: system_symfony_cli
      tags: [symfony]

    - import_role:
        name: certificates
      when: system_certificates
      tags: [certificates, nginx]

    - import_role:
        name: nginx
      when: system_nginx
      tags: [nginx, certificates]

    - import_role:
        name: redis
      when: system_redis
      tags: [redis]

    - import_role:
        name: cron
      when: system_cron
      tags: [cron]

    - import_role:
        name: supervisor
      when: system_supervisor
      tags: [supervisor]

    - import_role:
        name: mysql
      when: system_mysql or system_mariadb
      tags: [mysql, mariadb]

    - import_role:
        name: java
      when: system_java
      tags: [java]

    - import_role:
        name: elasticsearch
      when: system_elasticsearch
      tags: [elasticsearch]

    - import_role:
        name: docker
      when: system_docker
      tags: [docker]

    - import_role:
        name: influxdb
      when: system_influxdb
      tags: [influxdb]

    - import_role:
        name: gomplate
      when: system_gomplate
      tags: [gomplate]

    - import_role:
        name: ngrok
      when: system_ngrok
      tags: [ngrok]
