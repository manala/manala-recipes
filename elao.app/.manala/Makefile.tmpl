# Relative manala dir (.|.manala|â€¦)
_MANALA_DIR := $(patsubst %/.,%,$(patsubst %Makefile,%,$(lastword $(MAKEFILE_LIST))).)

include \
	$(_MANALA_DIR)/make/std.mk \
	$(_MANALA_DIR)/make/help.mk \
	$(_MANALA_DIR)/make/os.mk \
	$(_MANALA_DIR)/make/docker.mk \
	$(_MANALA_DIR)/make/try.mk \
	$(_MANALA_DIR)/make/git.mk \
	$(_MANALA_DIR)/make/semver.mk

_DOCKER_COMPOSE_PROJECT_DIRECTORY = $(_MANALA_DIR)
_DOCKER_COMPOSE_PROJECT_NAME = {{ .Vars.project.name }}
_DOCKER_COMPOSE_FILE = $(_MANALA_DIR)/docker-compose.yaml
_DOCKER_COMPOSE_SERVICE = app
_DOCKER_COMPOSE_USER = app

ifdef OS_DARWIN
_DOCKER_COMPOSE = mutagen compose
_DOCKER_COMPOSE_FILE += $(_MANALA_DIR)/docker-compose.mutagen.yaml
endif

###############
# Environment #
###############

HELP += $(call help_section, Environment)

# Docker commands only available *OUTSIDE* docker environment
ifndef DOCKER

# Setup commands only available *IN* root directory
ifeq ($(_MANALA_DIR),.manala)

HELP += $(call help,setup,               Setup environment)
setup:
	$(_docker_compose) up --detach
	$(setup)

endif

HELP += $(call help,up,                  Start the environment)
up:
	$(if $(shell $(_docker_compose) ps --quiet $(_DOCKER_COMPOSE_SERVICE)), \
		$(_docker_compose) up --detach, \
		$(call message_error, Environment has not been setup) ; exit 1 \
	)

HELP += $(call help,halt,                Stop the environment)
halt:
	$(_docker_compose) stop

HELP += $(call help,reload,              Restart the environment)
reload:
	$(_docker_compose) restart

HELP += $(call help,sh,                  Open shell to the environment)
sh:
	$(_docker_compose_exec) bash --login

HELP += $(call help,logs,                Show environment logs)
logs:
	$(_docker_compose) logs --follow

HELP += $(call help,destroy,             Stop and delete environment)
destroy:
	$(_docker_compose) down \
		--rmi local \
		--volumes \
		--remove-orphans

endif

HELP += $(call help,provision,           Provision the environment (TAGS|DIFF|VERBOSE))
provision: SHELL = $(DOCKER_SHELL)
provision:
	$(call log, Installing ansible galaxy collections...)
	sudo ansible-galaxy collection install \
		--requirements-file $(_MANALA_DIR)/ansible/collections/requirements.yaml
	$(call log, Running ansible playbook...)
	sudo ansible-playbook $(_MANALA_DIR)/ansible/system.yaml \
		$(if $(TAGS),--tags $(TAGS)) \
		$(if $(DIFF),--check --diff) \
		$(if $(VERBOSE),-vvv)

HELP += $(call help,provision.apt,       Provision the environment - Apt (DIFF|VERBOSE))
provision.apt: TAGS = apt
provision.apt: provision

{{- if .Vars.system.files }}

HELP += $(call help,provision.files,     Provision the environment - Files (DIFF|VERBOSE))
provision.files: TAGS = files
provision.files: provision

{{- end }}

{{- if .Vars.system.nginx.configs }}

HELP += $(call help,provision.nginx,     Provision the environment - Nginx (DIFF|VERBOSE))
provision.nginx: TAGS = nginx
provision.nginx: provision

{{- end }}

{{- if .Vars.system.supervisor.configs }}

HELP += $(call help,provision.supervisor,Provision the environment - Supervisor (DIFF|VERBOSE))
provision.supervisor: TAGS = supervisor
provision.supervisor: provision

{{- end }}

{{- if .Vars.system.php.version }}

HELP += $(call help,provision.php,       Provision the environment - Php (DIFF|VERBOSE))
provision.php: TAGS = php
provision.php: provision

{{- end }}
