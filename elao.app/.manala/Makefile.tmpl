# Relative root dir ("."|".."|"../.."|…)
_ROOT_DIR := $(patsubst ./%,%,$(patsubst %/.manala/Makefile,%,./$(filter %.manala/Makefile,$(MAKEFILE_LIST))))
# Is current dir root ? (""|"1")
_ROOT := $(if $(filter .,$(_ROOT_DIR)),1)
# Relative current dir ("."|"foo"|"foo/bar"|…)
_DIR := $(patsubst ./%,%,.$(patsubst $(realpath $(CURDIR)/$(_ROOT_DIR))%,%,$(CURDIR)))

include $(_ROOT_DIR)/.manala/make/text.mk
include $(_ROOT_DIR)/.manala/make/help.mk
include $(_ROOT_DIR)/.manala/make/os.mk
include $(_ROOT_DIR)/.manala/make/try.mk
include $(_ROOT_DIR)/.manala/make/git.mk
include $(_ROOT_DIR)/.manala/make/semver.mk

###############
# Environment #
###############

include $(_ROOT_DIR)/.manala/vagrant/make.mk

# Vagrant commands only available *OUTSIDE* vagrant environment
ifneq ($(container),vagrant)

export VAGRANT_CWD = $(_ROOT_DIR)/.manala

HELP += $(call help_section, Environment)

# Setup commands only available *IN* root directory
ifdef _ROOT
HELP += $(call help,setup,               Setup environment)
setup:
	vagrant up --provision
	$(setup)
endif

HELP += $(call help,up,                  Start the environment)
up:
	vagrant up

HELP += $(call help,halt,                Stop the environment)
halt:
	vagrant halt

HELP += $(call help,reload,              Restart the environment)
reload:
	vagrant reload

HELP += $(call help,ssh,                 Connect to the environment via SSH)
ssh: export WORKDIR = /srv/app/$(_DIR)
ssh:
	vagrant ssh

HELP += $(call help,destroy,             Stop and delete environment)
destroy:
	vagrant destroy

HELP += $(call help,provision,           Provision the environment (TAGS|DIFF|VERBOSE))
provision:
	vagrant provision --provision-with system

else

HELP += $(call help_section, Environment)

HELP += $(call help,provision,           Provision the environment (TAGS|DIFF|VERBOSE))
provision:
	$(call log, Install ansible galaxy collection)
	cd $(_ROOT_DIR)/.manala/ansible \
		&& ansible-galaxy collection install \
			--requirements-file collections/requirements.yaml \
			--force
	$(call log, Run ansible playbook)
	cd $(_ROOT_DIR)/.manala/ansible \
		&& ansible-playbook system.yaml \
			--inventory-file inventories \
			--limit development \
			--become \
			$(if $(TAGS),--tags $(TAGS)) \
			$(if $(VERBOSE),-vvv) \
			$(if $(DIFF),--check --diff)

endif

HELP += $(call help,provision.apt,       Provision the environment - Apt (DIFF|VERBOSE))
provision.apt: export TAGS = apt
provision.apt: provision

HELP += $(call help,provision.files,     Provision the environment - Files (DIFF|VERBOSE))
provision.files: export TAGS = files
provision.files: provision

HELP += $(call help,provision.nginx,     Provision the environment - Nginx (DIFF|VERBOSE))
provision.nginx: export TAGS = nginx
provision.nginx: provision

HELP += $(call help,provision.supervisor,Provision the environment - Supervisor (DIFF|VERBOSE))
provision.supervisor: export TAGS = supervisor
provision.supervisor: provision

HELP += $(call help,provision.php,       Provision the environment - Php (DIFF|VERBOSE))
provision.php: export TAGS = php
provision.php: provision

##########
# Docker #
##########

include $(_ROOT_DIR)/.manala/docker/make.mk

# Docker commands only available *OUTSIDE* docker environment
ifneq ($(container),docker)

HELP += $(call help_section, Docker)

HELP += $(call help,docker,Run docker container)
docker:
	$(call docker_run)

endif

{{ if .Vars.releases -}}
############
# Releases #
############

HELP += $(call help_section, Releases)

{{ range $release := .Vars.releases }}

{{- if or (hasKey $release "release_tasks") (hasKey $release "release_add") (hasKey $release "release_removed") -}}
HELP += $(call help,release{{ include "release_target" $release }},Release {{ include "release_help" $release }})
release{{ include "release_target" $release }}: SHELL := $(or $(DOCKER_SHELL),$(SHELL))
release{{ include "release_target" $release }}:
	$(call log, Run ansible playbook)
	ansible-playbook $(_ROOT_DIR)/.manala/ansible/release.yaml \
		--inventory $(_ROOT_DIR)/.manala/ansible/inventories/release.yaml \
		--limit {{ include "release_group" . }}

{{ end -}}

{{- if hasKey $release "deploy_hosts" -}}
HELP += $(call help,deploy{{ include "release_target" $release }},Deploy {{ include "release_help" $release }} (REF))
deploy{{ include "release_target" $release }}: SHELL := $(or $(DOCKER_SHELL),$(SHELL))
deploy{{ include "release_target" $release }}:
	$(call log, Run ansible playbook)
	ansible-playbook $(_ROOT_DIR)/.manala/ansible/deploy.yaml \
		--inventory $(_ROOT_DIR)/.manala/ansible/inventories/deploy.yaml \
		--limit {{ include "release_group" $release }} \
		$(if $(REF),--extra-vars '{"deploy_strategy_git_ref": "$(REF)"}')

{{ end -}}

{{ end }}

{{- end -}}

#######
# SSH #
#######
{{- range $release := .Vars.releases }}
{{- if hasKey $release "deploy_hosts" }}
  {{- range $index, $host := $release.deploy_hosts }}
  {{- $length := len $release.deploy_hosts }}

## Ssh to {{ if hasKey $release "app" }}{{ $release.app }} {{ end }}{{ $release.mode }}{{ if gt $length 1 }} {{ (add $index 1) | printf "%02d" }}{{ end }} server
ssh{{ if hasKey $release "app" }}-{{ $release.app }}{{ end }}@{{ $release.mode }}{{ if gt $length 1 }}-{{ (add $index 1) | printf "%02d" }}{{ end }}: SHELL := $(or $(DOCKER_SHELL),$(SHELL))
ssh{{ if hasKey $release "app" }}-{{ $release.app }}{{ end }}@{{ $release.mode }}{{ if gt $length 1 }}-{{ (add $index 1) | printf "%02d" }}{{ end }}:
	ssh {{ if hasKey $host "ssh_user" }}{{ $host.ssh_user }}@{{ end }}{{ $host.ssh_host }}
  {{- end }}
{{- end -}}
{{- end }}

###########
# Project #
###########

HELP += $(call help_section, Project)
