{{- with .Vars.system -}}

#!/usr/bin/env sh

set -e

export APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1
export DEBIAN_FRONTEND=noninteractive

###############
# Environment #
###############

printf "[\033[36mEnvironment\033[0m] \033[32mSetup...\033[0m\n"

# Notes:
# - set `container` environment variable for environment checks
cat <<EOF > /etc/environment
container="vagrant"
EOF

########
# Root #
########

printf "[\033[36mRoot\033[0m] \033[32mPassword...\033[0m\n"

echo "root:root" | chpasswd

###########
# Cleanup #
###########

PACKAGES=""

# `exim4` package comes pre-installed on jessie bento debian vagrant images
if dpkg -s exim4 > /dev/null 2>&1 ; then
    PACKAGES="$PACKAGES exim4 exim4-base exim4-config exim4-daemon-light"
fi

# `cryptsetup` package comes pre-installed in bento debian vagrant images
if dpkg -s cryptsetup > /dev/null 2>&1 ; then
    PACKAGES="$PACKAGES cryptsetup"
fi

if [ ! -z "$PACKAGES" ] ; then
    printf "[\033[36mCleanup\033[0m] \033[32mPackages...\033[0m\n"

    apt-get --quiet --yes -o=Dpkg::Use-Pty=0 --purge autoremove \
      $PACKAGES
fi

printf "[\033[36mCleanup\033[0m] \033[32mMails...\033[0m\n"

rm -Rf /var/mail/*

printf "[\033[36mCleanup\033[0m] \033[32mMotd...\033[0m\n"

rm -Rf /etc/motd

{{- if eq (.version|int) 8 }}

##########
# Manala #
##########

printf "[\033[36mManala\033[0m] \033[32mSetup...\033[0m\n"

cat <<EOF > /etc/apt/sources.list.d/debian_manala_io.list
deb [arch=amd64] http://debian.manala.io jessie main
EOF

apt-key adv --quiet --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 1394DEA3

{{- end }}

##########
# Update #
##########

printf "[\033[36mApt\033[0m] \033[32mUpdate...\033[0m\n"

apt-get --quiet update

##########
# System #
##########

printf "[\033[36mSystem\033[0m] \033[32mInstall...\033[0m\n"

apt-get --quiet --yes -o=Dpkg::Use-Pty=0 --no-install-recommends --verbose-versions install \
{{- if eq (.version|int) 9 }}
  dirmngr \
{{- end }}
  make \
  linux-image-amd64 linux-headers-amd64

########
# Grub #
########

printf "[\033[36mGrub\033[0m] \033[32mSet device...\033[0m\n"

# See: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=982182
echo 'grub-pc grub-pc/install_devices multiselect /dev/sda' | debconf-set-selections

###########
# Upgrade #
###########

printf "[\033[36mApt\033[0m] \033[32mUpgrade...\033[0m\n"

apt-get --quiet --yes -o=Dpkg::Use-Pty=0 --purge --auto-remove dist-upgrade

###########
# Ansible #
###########

printf "[\033[36mAnsible\033[0m] \033[32mSetup...\033[0m\n"

cat <<EOF > /etc/apt/sources.list.d/ppa_launchpad_net_ansible_ansible_ubuntu.list
{{- if eq (.version|int) 8 }}
deb http://ppa.launchpad.net/ansible/ansible/ubuntu trusty main
{{- else if eq (.version|int) 9 }}
deb http://ppa.launchpad.net/ansible/ansible/ubuntu xenial main
{{- else if eq (.version|int) 10 }}
deb http://ppa.launchpad.net/ansible/ansible/ubuntu bionic main
{{- end }}
EOF

apt-key adv --quiet --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 93C4A3FD7BB9C367
apt-get --quiet update
apt-get --quiet --yes -o=Dpkg::Use-Pty=0 --no-install-recommends --verbose-versions install \
{{- if eq (.version|int) 8 }}
  python ansible
{{- else }}
  python3 ansible
{{- end }}

install --directory /root/.ansible/tmp --verbose

{{- end }}
