# Relative root dir ("."|".."|"../.."|…)
_DIR := $(patsubst ./%,%,$(patsubst %/.manala/Makefile,%,./$(filter %.manala/Makefile,$(MAKEFILE_LIST))))
# Is current dir root ? (""|"1")
_ROOT = $(if $(filter .,$(_DIR)),1)
# Relative current dir ("."|"foo"|"foo/bar"|…)
_CURRENT_DIR = $(patsubst ./%,%,.$(patsubst $(realpath $(CURDIR)/$(_DIR))%,%,$(CURDIR)))
# Cache dir
_CACHE_DIR = .manala/.cache

include $(_DIR)/.manala/make/text.mk
include $(_DIR)/.manala/make/help.mk
include $(_DIR)/.manala/make/os.mk
include $(_DIR)/.manala/make/math.mk
include $(_DIR)/.manala/docker/make.mk

##########
# System #
##########

# Docker commands only available *OUTSIDE* docker environment
ifndef DOCKER

HELP += $(call help_section, System)

HELP += $(call help,up,   Create and start local system (WAIT))
up:
	@$(call log, Builds$(,) creates and starts docker containers…)
	$(_docker_compose) up \
		--build \
		$(if $(WAIT), --wait)
.PHONY: up

HELP += $(call help,stop, Stop local system)
stop:
	@$(call log, Stop docker containers…)
	$(_docker_compose) stop
.PHONY: stop

HELP += $(call help,sh,   Open a local system shell)
sh:
	$(call docker_exec, exec bash --login)
.PHONY: sh

HELP += $(call help,clean,Clean local system)
clean:
	@$(call confirm, Confirm system cleaning)
	@$(call log, Stops and removes docker containers$(,) networks$(,) volumes$(,) images…)
	$(_docker_compose) down \
		--rmi all \
		--volumes \
		--remove-orphans
	@$(call log, Removes old docker images…)
	$(_docker) images \
		--filter reference='{{ .Vars.project.name }}:*' \
		--format "{{ `{{.ID}}` }}" \
			| xargs $(_docker) rmi --force
	@$(call log, Delete cache dir…)
	rm -Rf $(_DIR)/$(_CACHE_DIR)
.PHONY: clean

endif

{{- if .Vars.deploy.inventory }}

##########
# Deploy #
##########

HELP += $(call help_section, Deploy)

{{- range $group, $hosts := .Vars.deploy.inventory }}
{{- range $host, $vars := $hosts }}

HELP += $(call help,ssh@{{ $host }},Ssh to {{ $host }})
ssh@{{ $host }}:
	$(docker_exec) ssh {{ $vars.user }}@{{ $vars.host }}
.PHONY: ssh@{{ $host }}

{{- end }}
{{- end }}

{{- range $group, $hosts := .Vars.deploy.inventory }}

HELP += $(call help,deploy@{{ $group }},Deploy to {{ $group }} (VERBOSE))
deploy@{{ $group }}:
	$(docker_exec) ansible-playbook $(_DIR)/.manala/ansistrano/playbook.yaml \
		--inventory $(_DIR)/.manala/ansistrano/inventory.yaml \
		--limit {{ $group}} \
		$(if $(VERBOSE),-vvv)
.PHONY: deploy@{{ $group }}

{{- end }}

{{- end }}
