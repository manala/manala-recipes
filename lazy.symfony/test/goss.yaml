package:
  # System
  unzip:
    installed: true
  # Docker
  docker-ce-cli:
    installed: true
  # Deploy
  openssh-client:
    installed: true
  ansible:
    installed: true
  # Project
  nano:
    installed: true

group:
  # Base
  lazy:
    exists: true

user:
  # Base
  lazy:
    exists: true
    groups:
      - lazy
    shell: /bin/bash

file:
  # Base
  /etc/os-release:
    exists: true
    contents:
      - PRETTY_NAME="Debian GNU/Linux 12 (bookworm)"
  # Git
  /etc/gitconfig:
    exists: true
    contents:
      - "# Git config template"

command:
  # Base
  gosu --version:
    exit-status: 0
    stdout:
      - "/\\d+\\.\\d+/"
  gomplate --version:
    exit-status: 0
    stdout:
      - "/gomplate version \\d+\\.\\d+\\.\\d+/"
  # Direnv
  direnv --version:
    exit-status: 0
    stdout:
      - "/\\d+\\.\\d+\\.\\d+/"
  # Jq
  jq --version:
    exit-status: 0
    stdout:
      - "/jq-\\d+\\.\\d+\\.\\d+/"
  # Yq
  yq --version:
    exit-status: 0
    stdout:
      - "/yq \\(https://github.com/mikefarah/yq/\\) version v\\d+\\.\\d+\\.\\d+/"
  # Goss
  goss --version:
    exit-status: 0
    stdout:
      - goss version v{{ .Vars.system.goss.version }}
  # Env
  echo ${TEST}:
    exit-status: 0
    stdout:
      - test
  # Env File
  echo ${TEST_FOO}:
    exit-status: 0
    stdout:
      - foo
  echo ${TEST_BAR}:
    exit-status: 0
    stdout:
      - bar
  # Nginx
  nginx -V:
    exit-status: 0
    stderr:
      - "nginx version: nginx/{{ .Vars.system.nginx.version }}"
  # Php
  php --version:
    exit-status: 0
    stdout:
      - PHP {{ .Vars.system.php.version }}
  php -m:
    exit-status: 0
    stdout:
      # Base
      - Zend OPcache
      # Symfony
      - intl
      - curl
      - mbstring
      - xml
      # Project
      {{- range $extension := .Vars.system.php.extensions }}
      - {{ $extension }}
      {{- end }}
  composer --version:
    exit-status: 0
    stdout:
      - Composer version 2
  # Nodejs
  node --version:
    exit-status: 0
    stdout:
      - v{{ .Vars.system.nodejs.version }}
  npm --version:
    exit-status: 0
  # Deploy
  ansible-galaxy role list:
    exit-status: 0
    stdout:
      - "# /usr/share/ansible/roles"
      - "- ansistrano.deploy, 3.14.0"
      - "- ansistrano.rollback, 3.1.0"

process:
  # Nginx
  nginx:
    running: true
  # Php
  php-fpm:
    running: true

http:
  http://localhost:
    status: 200
    body:
      - Foo
  # PhpMyAdmin
  http://phpmyadmin:
    status: 200
  # MailDev
  http://maildev:1080:
    status: 200

addr:
  # MariaDB
  tcp://mariadb:3306:
    reachable: true
  # MailDev
  tcp://maildev:25:
    reachable: true
