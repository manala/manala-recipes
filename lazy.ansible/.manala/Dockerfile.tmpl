ARG DEBIAN=bullseye

########
# Base #
########

FROM debian:${DEBIAN}-slim as base

ARG DEBIAN
ARG USER_ID=1000
ARG GROUP_ID=1000
ARG S6_OVERLAY_VERSION=2.2.0.3
ARG GOSU_VERSION=1.13
ARG GOMPLATE_VERSION=3.9.0
ARG STARSHIP_VERSION=0.56.0

# The 'container' environment variable tells systemd that it's running inside a
# Docker container environment.
# It's also internally used for checking we're running inside a container.
ENV container="docker"

RUN \
    apt-get update \
    && apt-get install --yes --no-install-recommends \
        sudo \
        curl \
        ca-certificates \
        gnupg \
        libarchive-tools bzip2 \
        bash-completion \
        make \
        less \
        vim \
    # User
    && addgroup --gid ${GROUP_ID} lazy \
    && adduser --home /home/lazy --shell /bin/bash --uid ${USER_ID} --gecos lazy --ingroup lazy --disabled-password lazy \
    && mkdir -p /run/user/${USER_ID} && chown lazy:lazy /run/user/${USER_ID} \
    && printf "lazy ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/lazy \
    # S6
    && curl -sSL https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-amd64.tar.gz \
      | bsdtar -xvf - -C /usr/bin --strip-components=2 bin/s6-svscan bin/s6-supervise bin/s6-svc \
    # Gosu
    && curl -sSL https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64 \
        -o /usr/local/bin/gosu \
    && chmod +x /usr/local/bin/gosu \
    # Gomplate
    && curl -sSL https://github.com/hairyhenderson/gomplate/releases/download/v${GOMPLATE_VERSION}/gomplate_linux-amd64 \
        -o /usr/local/bin/gomplate \
    && chmod +x /usr/local/bin/gomplate \
    # Bash completion
    && mkdir -p /etc/bash_completion.d \
    # Starship
    && curl -sSL https://github.com/starship/starship/releases/download/v${STARSHIP_VERSION}/starship-x86_64-unknown-linux-gnu.tar.gz \
        | bsdtar -xvf - -C /usr/local/bin \
    && printf "eval \"\$(starship init bash)\"\nexport STARSHIP_CONFIG=\"/etc/starship/config.toml\"" > /etc/profile.d/starship.sh

##########
# System #
##########

FROM base AS system

ARG DEBIAN

RUN \
    apt-get install --yes --no-install-recommends \
      openssh-client \
      sshpass

# Ansible
{{ $ansible := .Vars.system.ansible -}}
RUN \
    BUILD_PACKAGES="pipx python3-venv" \
    export PIPX_HOME="/usr/local" \
    export PIPX_BIN_DIR="/usr/local/bin" \
    && apt-get install --yes --no-install-recommends \
      python3 \
      python3-argcomplete \
      ${BUILD_PACKAGES} \
    && pipx install ansible-core=={{ $ansible.version -}} \
    && apt-get purge --yes --autoremove ${BUILD_PACKAGES} \
    # Bash completion
    && activate-global-python-argcomplete3 --dest /etc/bash_completion.d
