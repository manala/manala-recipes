ARG DEBIAN=bullseye

########
# Base #
########

FROM debian:${DEBIAN}-slim as base

ARG DEBIAN
ARG USER_ID=1000
ARG GROUP_ID=1000
ARG GOSU_VERSION=1.16
ARG GOMPLATE_VERSION=3.11.3

# The 'container' environment variable tells systemd that it's running inside a
# Docker container environment.
# It's also internally used for checking we're running inside a container.
ENV container="docker"

RUN \
    # Backports
    printf "deb http://deb.debian.org/debian ${DEBIAN}-backports main" > /etc/apt/sources.list.d/backports.list \
    && apt-get update \
    && apt-get install --yes --no-install-recommends \
        s6 \
        sudo \
        curl \
        ca-certificates \
        gnupg \
        libarchive-tools bzip2 \
        bash-completion \
        rsync \
        git \
        make \
        less \
        vim \
        socat \
    # User
    && addgroup --gid ${GROUP_ID} lazy \
    && adduser --home /home/lazy --shell /bin/bash --uid ${USER_ID} --gecos lazy --ingroup lazy --disabled-password lazy \
    && mkdir -p /run/user/${USER_ID} && chown lazy:lazy /run/user/${USER_ID} \
    && printf "lazy ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/lazy \
    # Gosu
    && curl -sSL https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-{{ include "arch_map" (dict "amd64" "amd64" "arm64" "arm64") }} \
        -o /usr/local/bin/gosu \
    && chmod +x /usr/local/bin/gosu \
    # Gomplate
    && curl -sSL https://github.com/hairyhenderson/gomplate/releases/download/v${GOMPLATE_VERSION}/gomplate_linux-{{ include "arch_map" (dict "amd64" "amd64" "arm64" "arm64") }} \
        -o /usr/local/bin/gomplate \
    && chmod +x /usr/local/bin/gomplate \
    # Bash completion
    && mkdir -p /etc/bash_completion.d \
    # Oh My Bash
    && git clone https://github.com/ohmybash/oh-my-bash.git /usr/local/share/oh-my-bash

##########
# System #
##########

FROM base AS system

ARG DEBIAN

RUN \
    apt-get install --yes --no-install-recommends \
      openssh-client \
      sshpass \
      python3 python3-pip \
      python3-argcomplete \
      python3-apt {{- if .Vars.system.docker }} python3-docker {{- end }} \
      shellcheck \
    # Bash completion
    && activate-global-python-argcomplete3 --dest /etc/bash_completion.d

{{ if .Vars.system.docker -}}
# Docker
RUN \
    printf "deb https://download.docker.com/linux/debian ${DEBIAN} stable" > /etc/apt/sources.list.d/docker.list \
    && curl -sSL https://download.docker.com/linux/debian/gpg \
        | apt-key add - \
    && apt-get update \
    && apt-get install --yes --no-install-recommends \
        docker-ce-cli

{{ end -}}

# Ansible
{{ $ansible := .Vars.system.ansible -}}
RUN \
    pip3 install ansible-core=={{ $ansible.version }}

{{ $ansibleLint := index .Vars.system "ansible-lint" -}}
{{ $molecule := .Vars.system.molecule -}}
{{ if or $ansibleLint.version $molecule.version -}}
RUN \
    BUILD_PACKAGES="pipx
      {{- if $ansibleLint.version }} python3-dev gcc {{- end -}}
    " \
    export PIPX_HOME="/usr/local" \
    export PIPX_BIN_DIR="/usr/local/bin" \
    && apt-get install --yes --no-install-recommends \
      ${BUILD_PACKAGES} \
    {{- if $ansibleLint.version }}
    # Ansible Lint
    && pipx install ansible-lint=={{ $ansibleLint.version }} \
    {{- end }}
    {{- if $molecule.version }}
    # Molecule
    && pipx install molecule=={{ $molecule.version }} \
    && _MOLECULE_COMPLETE=bash_source molecule > /etc/bash_completion.d/molecule \
    {{- if $molecule.plugins.version }}
    && pipx inject molecule molecule-plugins=={{ $molecule.plugins.version }} \
    {{- if $molecule.plugins.azure }}
    && pipx inject molecule molecule-plugins[azure]=={{ $molecule.plugins.version }} \
    {{- end }}
    {{- if $molecule.plugins.docker }}
    && pipx inject molecule molecule-plugins[docker]=={{ $molecule.plugins.version }} \
    {{- end }}
    {{- if $molecule.plugins.gce }}
    && pipx inject molecule molecule-plugins[gce]=={{ $molecule.plugins.version }} \
    {{- end }}
    {{- end }}
    {{- end }}
    && apt-get purge --yes --autoremove ${BUILD_PACKAGES}

{{ end -}}
